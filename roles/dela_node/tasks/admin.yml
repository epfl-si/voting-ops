
# ./votsible.sh --demo -t dela -t dela.join
# Note that up to date secrets (dela_join_{address,token,hash}) are required 
# TODO: run this only if nodes are not already part of a network...

# ---------------------------------------------------------- node configurations


- name: Debug write the command for importing nodes to master node
  ansible.builtin.debug:
    msg: "dvoting --config /data/node ordering setup {{ all_dela_node_config | map('regex_replace','^(.+)$','--member \\1') | join(' ') }}"
  when: inventory_hostname == MASTER_WORKER.host
  tags:
    - never
    - dela.debug

- name: Add all nodes to the config configure (script 3-setup-members.sh by Linus)
  community.docker.docker_container_exec:
    container: "dela-worker-{{ MASTER_WORKER.node }}"
    command: "/bin/bash -c 'LLVL=error dvoting --config /data/node ordering setup {{ all_dela_node_config | map('regex_replace','^(.+)$','--member \\1') | join(' ') }}'"
  when: inventory_hostname == MASTER_WORKER.host
  tags:
    - never
    - dela.join
    - dela.join_keys

- name: Execute 3-setup-members from Linus scripts
  ansible.builtin.shell: "{{ dela.init_dir }}/3-setup-members.sh"
  when: inventory_hostname == MASTER_WORKER.host
  tags:
    - never
    - dela.manual_join

# -------------------------------------------------------------------- node keys

# docker-compose exec dela-worker crypto bls signer read --path /data/node/private.key --format BASE64_PUBKEY

- name: debug all_dela_node_keys
  ansible.builtin.debug:
    msg: "{{ all_dela_node_keys }}"
  when: inventory_hostname == MASTER_WORKER.host
  tags:
    - never
    - dela.debug

- name: debug preview add keys of all nodes
  ansible.builtin.debug:
    msg: "container: {{ item[0] }} add key {{ item[1] }}"
  loop: "{{ dela.nodes | map(attribute='name') | product(all_dela_node_keys) }}"
  tags:
    - never
    - dela.debug

- name: Execute 5-authorize-identities.sh from Linus scripts
  ansible.builtin.shell: "{{ dela.init_dir }}/5-authorize-identities.sh"
  tags:
    - never
    - dela.manual_join

- name: Execute 6-update-access-contract.sh from Linus scripts
  ansible.builtin.shell: "{{ dela.init_dir }}/6-update-access-contract.sh"
  when: inventory_hostname == MASTER_WORKER.host
  tags:
    - never
    - dela.manual_join

- name: add keys of all nodes to all nodes (script 5-authorize-identities.sh by Linus)
  community.docker.docker_container_exec:
    container: "dela-worker-{{ item[0] }}"
    command: "/bin/bash -c 'LLVL=error dvoting --config /data/node access add --identity {{ item[1] }}'"
  loop: "{{ dela.nodes | map(attribute='name') | product(all_dela_node_keys) }}"
  tags:
    - never
    - dela.join
    - dela.join_ids

- name: configure voting pool on master node (script 6-update-access-contract.sh by Linus)
  community.docker.docker_container_exec:
    container: "dela-worker-{{ MASTER_WORKER.node }}"
    argv:
      - "dvoting"
      - "--config"
      - "/data/node"
      - "pool"
      - "add"
      - "--key"
      - "--args"
      - "github.com/c4dt/dela.ContractArg"
      - "--args"
      - "github.com/c4dt/dela.Access"
      - "--args"
      - "access:grant_id"
      - "--args"
      - "{{ dela.grant_id }}"
      - "--args"
      - "access:grant_contract"
      - "--args"
      - "github.com/c4dt/dela.Evoting"
      - "--args"
      - "access:grant_command"
      - "--args"
      - "all"
      - "--args"
      - "access:identity"
      - "--args"
      - "{{ item }}"
      - "--args"
      - "access:command"
      - "--args"
      - "GRANT"
    # command: >
    #   /bin/bash -c ' \
    #     LLVL=error \
    #     dvoting \
    #     --config /data/node pool add\
    #     --key /data/node/private.key\
    #     --args github.com/c4dt/dela.ContractArg\
    #     --args github.com/c4dt/dela.Access\
    #     --args access:grant_id\
    #     --args "45564f54\
    #     --args access:grant_contract\
    #     --args github.com/c4dt/dela.Evoting\
    #     --args access:grant_command\
    #     --args all\
    #     --args access:identity\
    #     --args {{ item }}\
    #     --args access:command\
    #     --args GRANT\
    #   '
  with_items: "{{ all_dela_node_keys }}"
  when: inventory_hostname == MASTER_WORKER.host
  tags:
    - never
    - dela.join
    - dela.join_ids


# TODO: this does not work yet
# - name: configure proxy (script 7-add-proxy.sh by Linus)
#   when: inventory_hostname == MASTER_WORKER.host
#   ansible.builtin.shell:
#     cmd: >
#       curl -k "{{ dela.frontend_url }}/api/get_dev_login/{{ dela.admin_scipers[0] }}" -c /tmp/cookies.txt -o /dev/null -s
#       curl -sk "{{ dela.frontend_url }}/api/proxies/" -X POST -H 'Content-Type: application/json' -b /tmp/cookies.txt --data "{\"NodeAddr\":\"https://node.{{ item.node_host }}:443\",\"Proxy\":\"https://{{ item.http_host }}\"}"
#       rm /tmp/cookies.txt
#   loop: "{{ dela.nodes }}"
#   delegate_to: localhost
#   tags:
#     - never
#     - dela.join
#     - dela.stranezza

