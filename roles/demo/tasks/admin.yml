# ./votsible.sh --demo -t dela -t dela.join
# Note that up to date secrets (dela_join_{address,token,hash}) are required 
# TODO: run this only if nodes are not already part of a network...
- name: Read dela node configuration
  community.docker.docker_container_exec:
    container: "dela-worker-{{ item.name }}"
    command: "/bin/bash -c 'LLVL=error dvoting --config /data/node ordering export'"
  with_items: "{{ dela.nodes }}"
  register: nodes_config
  tags:
    - never
    - dela.join
    - dela.join_preview

- name: Set dela node configuration as fact
  ansible.builtin.set_fact:
    dela_node_config: "{{ nodes_config.results | map(attribute='stdout') | list }}"
  tags:
    - never
    - dela.join
    - dela.join_preview

- name: gather dela_node_config
  ansible.builtin.set_fact:
    all_dela_node_config: "{{ groups['dela_nodes'] | map('extract', hostvars, 'dela_node_config') | list | flatten }}"
  when: inventory_hostname == MASTER_WORKER.host
  tags:
    - never
    - dela.join
    - dela.join_preview


- name: all_dela_node_config
  ansible.builtin.debug:
    msg: "{{ all_dela_node_config | map('regex_replace','^(.+)$','--member \\1') | join(' ') }}"
  when: inventory_hostname == MASTER_WORKER.host
  tags:
    - never
    - dela.join
    - dela.join_preview

- name: configure 
  community.docker.docker_container_exec:
    container: "dela-worker-{{ item.name }}"
    command: "/bin/bash -c 'LLVL=error dvoting --config /data/node ordering setup {{ all_dela_node_config | map('regex_replace','^(.+)$','--member \\1') | join(' ') }}'"
  with_items: "{{ dela.nodes }}"
  when: inventory_hostname == MASTER_WORKER.host
  tags:
    - never
    - dela.join

